<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>br.pucminas.aulapratica.jee</groupId>
   <artifactId>trabalho_jee_walter_coelho</artifactId>
   <packaging>war</packaging>
   <name>trabalho_jee_walter_coelho</name>
   <version>1.0.0-SNAPSHOT</version>

   <properties>
      <!--
         Explicitly declaring the source encoding eliminates the following message:
         [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
      -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <!--
         To set the jboss.home environment variable the Maven way, set the jboss.home property in an active profile in
         the Maven 2 settings.xml file
      -->
      <jboss.home>${env.JBOSS_HOME}</jboss.home>
      <jboss.domain>default</jboss.domain>
      <!-- The version of Weld extensions in use -->
      <weld.extensions.version>1.0.0-CR2</weld.extensions.version>
   </properties>

   <repositories>
       <!-- Several key Java EE APIs and RIs are missing from the Maven Central Repository -->
       <!-- The goal is to eventually eliminate the reliance on the JBoss repository -->
       <repository>
          <id>repository.jboss.org</id>
          <name>JBoss Repository</name>
          <url>http://repository.jboss.org/maven2</url>
       </repository>
   </repositories>

   <dependencyManagement>
      <dependencies>
         <!-- Import scope will provide versions for dependencies below. -->
         <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-extensions-bom</artifactId>
            <version>${weld.extensions.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>
   <dependencies>
      <dependency>
		  <groupId>org.hibernate</groupId>
		  <artifactId>hibernate-validator</artifactId>
		  <version>5.3.4.Final</version>
		</dependency>
		<dependency>
		  <groupId>javax.el</groupId>
		  <artifactId>javax.el-api</artifactId>
		  <version>2.2.4</version>
		</dependency>
		<dependency>
		  <groupId>org.glassfish.web</groupId>
		  <artifactId>javax.el</artifactId>
		  <version>2.2.4</version>
		</dependency>
	  <!-- https://mvnrepository.com/artifact/javax/javaee-api -->
		<dependency>
		    <groupId>javax</groupId>
		    <artifactId>javaee-api</artifactId>
		    <version>7.0</version>
		    <scope>provided</scope>
		</dependency>	  	
      <!-- Optional, but highly recommended. -->
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <version>5.10</version>
         <scope>test</scope>
         <classifier>jdk15</classifier>
      </dependency>
   </dependencies>
   <build>
      <finalName>${artifactId}</finalName>
      <plugins>
         <!-- Compiler plugin enforces Java 1.6 compatiblity -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
         </plugin>

         <!-- Eclipse plugin can force download of source and JavaDoc jars -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <configuration>
               <wtpversion>2.0</wtpversion>
               <!--
               <downloadSources>true</downloadSources>
               <downloadJavadocs>true</downloadJavadocs>
               -->
            </configuration>
         </plugin>

         <!-- Configure the JBoss AS Maven deploy plugin -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>jboss-maven-plugin</artifactId>
            <configuration>
               <jbossHome>${jboss.home}</jbossHome>
               <serverName>${jboss.domain}</serverName>
               <fileNames>
                  <fileName>${project.build.directory}/${build.finalName}.war</fileName>
               </fileNames> 
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
